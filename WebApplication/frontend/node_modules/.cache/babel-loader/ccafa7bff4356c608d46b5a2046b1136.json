{"ast":null,"code":"var _jsxFileName = \"/home/cluca/Documents/Licenta/WebApplication/frontend/src/main/pages/Auth.js\";\nimport React from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\n\nconst Auth = () => {\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmiteHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Login required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmiteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Trebuie sa introduci o adresa de email valida.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Parola trebuie sa aiba minim 5 caractere.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"LOGIN\")));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/cluca/Documents/Licenta/WebApplication/frontend/src/main/pages/Auth.js"],"names":["React","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","useForm","Auth","formState","inputHandler","email","value","isValid","password","authSubmiteHandler","event","preventDefault","console","log","inputs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SAAQC,eAAR,EAAyBC,mBAAzB,QAAmD,8BAAnD;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,OAAO,CAAC;AACtCI,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAD+B;AAKtCC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH;AAL4B,GAAD,EAStC,KATsC,CAAzC;;AAWA,QAAME,kBAAkB,GAAGC,KAAK,IAAI;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,MAAtB;AACH,GAHD;;AAKA,sBAAS,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,eAGL;AAAM,IAAA,QAAQ,EAAEL,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,UAAU,EAAE,CAACV,eAAe,EAAhB,CALhB;AAMI,IAAA,SAAS,EAAC,gDANd;AAOI,IAAA,OAAO,EAAEK,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,KAAD;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,UAAU,EAAE,CAACJ,mBAAmB,CAAC,CAAD,CAApB,CALhB;AAMI,IAAA,SAAS,EAAC,2CANd;AAOI,IAAA,OAAO,EAAEI,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAiBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,CAHK,CAAT;AAuBH,CAxCD;;AA0CA,eAAeL,IAAf","sourcesContent":["import React from 'react'\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button'\nimport {VALIDATOR_EMAIL, VALIDATOR_MINLENGTH} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css'\n\nconst Auth = () => {\n    const [formState, inputHandler] = useForm({\n        email: {\n            value: '',\n            isValid: false\n        },\n        password: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    const authSubmiteHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs)\n    }\n\n    return ( <Card className=\"authentication\">\n        <h2>Login required</h2>\n        <hr />\n        <form onSubmit={authSubmiteHandler}>\n            <Input \n                element=\"input\" \n                id=\"email\" \n                type=\"email\"\n                label=\"E-Mail\" \n                validators={[VALIDATOR_EMAIL()]}\n                errorText=\"Trebuie sa introduci o adresa de email valida.\"\n                onInput={inputHandler}/>\n            <Input \n                element=\"input\" \n                id=\"password\" \n                type=\"password\"\n                label=\"Password\" \n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Parola trebuie sa aiba minim 5 caractere.\"\n                onInput={inputHandler}/>\n            <Button type=\"submit\" disabled={!formState.isValid}>LOGIN</Button>\n            </form>\n        </Card> );\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}