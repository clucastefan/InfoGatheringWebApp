{"ast":null,"code":"var _jsxFileName = \"/home/cluca/Documents/Licenta/WebApplication/frontend/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from 'react';\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/cluca/Documents/Licenta/WebApplication/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AAEA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFX;AAGHC,QAAAA,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;AAHd,OAAP;;AAKJ;AACI,aAAON,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMO,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,UAAD,EAAYC,QAAZ,IAAwBb,UAAU,CAACE,YAAD,EAAe;AAACI,IAAAA,KAAK,EAAE,EAAR;AAAYE,IAAAA,OAAO,EAAE;AAArB,GAAf,CAAxC;;AAEA,QAAMM,aAAa,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,QAAQ,CAAC;AAACR,MAAAA,IAAI,EAAE,QAAP;AAAiBE,MAAAA,GAAG,EAAEQ,KAAK,CAACC,MAAN,CAAaV,KAAnC;AAA0CG,MAAAA,UAAU,EAAEE,KAAK,CAACF;AAA5D,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMQ,OAAO,GAAGN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACd;AAAO,IAAA,EAAE,EAAEN,KAAK,CAACO,EAAjB;AAAqB,IAAA,IAAI,EAAEP,KAAK,CAACN,IAAjC;AAAuC,IAAA,WAAW,EAAEM,KAAK,CAACQ,WAA1D;AAAuE,IAAA,QAAQ,EAAEL,aAAjF;AAAgG,IAAA,KAAK,EAAEF,UAAU,CAACN,KAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,gBAEZ;AAAU,IAAA,EAAE,EAAEK,KAAK,CAACO,EAApB;AAAwB,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAA5C;AAAgD,IAAA,QAAQ,EAAEN,aAA1D;AAAyE,IAAA,KAAK,EAAEF,UAAU,CAACN,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAG,gBAAe,CAACM,UAAU,CAACJ,OAAZ,IAAuB,uBAAwB,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAO,IAAA,OAAO,EAAEG,KAAK,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACU,KAAjC,CADG,EAEFJ,OAFE,EAGF,CAACL,UAAU,CAACJ,OAAZ,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAK,CAACW,SAAV,CAHrB,CAAP;AAKH,CAhBD;;AAkBA,eAAeZ,KAAf","sourcesContent":["import React,{ useReducer } from 'react';\n\nimport './Input.css'\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n    switch(action.type){\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n    const [inputState,dispatch] = useReducer(inputReducer, {value: '', isValid: false});\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\n    };\n\n    const element = props.element === 'input' ? \n    ( <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} value={inputState.value}/> ) \n    : ( <textarea id={props.id} rows={props.rows || 3 } onChange={changeHandler} value={inputState.value}/>)\n\n    return <div className={`form-control ${!inputState.isValid && 'form-control--invalid'}`}>\n        <label htmlFor={props.id}>{props.label}</label>\n        {element}\n        {!inputState.isValid && <p>{props.errorText}</p>}\n    </div>\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}