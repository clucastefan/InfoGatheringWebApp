{"ast":null,"code":"var _jsxFileName = \"/home/cluca/Documents/Licenta/WebApplication/frontend/src/scans/pages/NewScan.js\";\nimport React from 'react';\nimport './ScanForm.css';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_IPDNS, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\n\nconst NewScan = () => {\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    ipdns: {\n      value: '',\n      isValid: false\n    },\n    descriere: {\n      value: '',\n      isValid: false\n    },\n    tipScan: {\n      value: formState.inputs.option.value,\n      isValid: false\n    }\n  }, false);\n\n  const scanSubmitHandler = event => {\n    event.preventDefault();\n    var e = document.getElementById(\"tipScan\");\n    var tipScan = e.options[e.selectedIndex].text;\n    console.log(formState.inputs, tipScan);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: scanSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Titlu\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Te rog sa introduci un titlu valid.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"ipdns\",\n    element: \"input\",\n    type: \"text\",\n    label: \"IP/DNS\",\n    validators: [VALIDATOR_IPDNS()],\n    errorText: \"Te rog sa introduci o adresa IP sau DNS valida.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"TIP SCANARE\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"tipScan\",\n    name: \"selectList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"FULL_SCAN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"FULL SCAN\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"WEB_SCAN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"WEB SCAN\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"SERVER_SCAN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"SERVER SCAN\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"descriere\",\n    element: \"textarea\",\n    type: \"text\",\n    label: \"Descriere\",\n    validators: [VALIDATOR_MINLENGTH(1)],\n    errorText: \"Trebuie sa adaugi o descriere scurta.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"START SCAN\"));\n};\n\nexport default NewScan;","map":{"version":3,"sources":["/home/cluca/Documents/Licenta/WebApplication/frontend/src/scans/pages/NewScan.js"],"names":["React","Input","VALIDATOR_IPDNS","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useForm","NewScan","formState","inputHandler","title","value","isValid","ipdns","descriere","tipScan","inputs","option","scanSubmitHandler","event","preventDefault","e","document","getElementById","options","selectedIndex","text","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './ScanForm.css'\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_IPDNS, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\n\n\nconst NewScan = () => {\n    const [formState, inputHandler] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        ipdns: {\n            value: '',\n            isValid: false\n        },\n        descriere: {\n            value: '',\n            isValid: false\n        },\n        tipScan: {\n            value: formState.inputs.option.value,\n            isValid: false\n        }\n    }, false);\n\n    const scanSubmitHandler = event => {\n        event.preventDefault();\n        var e = document.getElementById(\"tipScan\");\n        var tipScan = e.options[e.selectedIndex].text;\n        console.log(formState.inputs,tipScan);\n    };\n\n    return <form className=\"place-form\" onSubmit={scanSubmitHandler}>\n        <Input \n            id=\"title\"\n            element=\"input\" \n            type=\"text\" label=\"Titlu\" \n            validators={[VALIDATOR_REQUIRE()]} \n            errorText=\"Te rog sa introduci un titlu valid.\"\n            onInput={inputHandler}/>\n\n        <Input \n            id=\"ipdns\"\n            element=\"input\" \n            type=\"text\" label=\"IP/DNS\" \n            validators={[VALIDATOR_IPDNS()]} \n            errorText=\"Te rog sa introduci o adresa IP sau DNS valida.\"\n            onInput={inputHandler}/>\n\n        <label>TIP SCANARE</label>\n        <select id=\"tipScan\" name=\"selectList\">\n        <option value=\"FULL_SCAN\">FULL SCAN</option>\n        <option value=\"WEB_SCAN\">WEB SCAN</option>\n        <option value=\"SERVER_SCAN\">SERVER SCAN</option>\n        </select>\n\n        <Input \n            id=\"descriere\"\n            element=\"textarea\" \n            type=\"text\" label=\"Descriere\"\n            validators={[VALIDATOR_MINLENGTH(1)]}  \n            errorText=\"Trebuie sa adaugi o descriere scurta.\"\n            onInput={inputHandler}\n            />\n        \n        <Button type=\"submit\" disabled={!formState.isValid}>START SCAN</Button>\n    </form>\n};\n\nexport default NewScan;"]},"metadata":{},"sourceType":"module"}